# Generated by Django 5.2 on 2025-04-29 13:49

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Circuito',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_circuito', models.IntegerField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Eleccion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_eleccion', models.CharField(max_length=255)),
                ('tipo', models.CharField(choices=[('Ejecutiva', 'Ejecutiva'), ('Legislativa', 'Legislativa')], max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Partido',
            fields=[
                ('numero_lista', models.IntegerField(primary_key=True, serialize=False)),
                ('nombre_partido', models.CharField(max_length=255)),
                ('sigla', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('operador', 'Operador'), ('panelista', 'Panelista'), ('admin', 'Administrador')], default='operador', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CargoPostulacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_postulacion', models.CharField(max_length=255)),
                ('tipo', models.CharField(max_length=50)),
                ('eleccion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cargos', to='elecciones.eleccion')),
            ],
        ),
        migrations.CreateModel(
            name='Escuela',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_escuela', models.CharField(max_length=255)),
                ('numero_escuela', models.IntegerField(unique=True)),
                ('circuito', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='escuelas', to='elecciones.circuito')),
            ],
        ),
        migrations.CreateModel(
            name='Mesa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_mesa', models.IntegerField(unique=True)),
                ('circuito', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mesas_directas', to='elecciones.circuito')),
                ('escuela', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mesas', to='elecciones.escuela')),
            ],
        ),
        migrations.CreateModel(
            name='PartidoPostulacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cargo_postulacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cargos_postulados', to='elecciones.cargopostulacion')),
                ('partido', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='partidos_postulados', to='elecciones.partido')),
            ],
        ),
    ]
